{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\WEB DEV\\\\Reactjs\\\\chatting_app\\\\src\\\\pages\\\\RegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n// import {faFolderPlus} from '@fortawesome/free-solid-svg-icons';\nimport addAvatar from \"../images/addAvatar.png\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, storage, db } from \"../Firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationPage = () => {\n  _s();\n  const [error, setError] = useState(false);\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    //console.log(e.target[0].value); //to get only first input ele and there are total 5 child ele\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].files[0]; // will take first file\n\n    try {\n      // const auth = getAuth();\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const storageRef = ref(storage, displayName);\n      const uploadTask = uploadBytesResumable(storageRef, file); //\n\n      // Register three observers:\n      // 1. 'state_changed' observer, called any time the state changes\n      // 2. Error observer, called on failure\n      // 3. Completion observer, called on successful completion\n\n      // uploadTask.on(\n\n      //   (error) => {\n      //      setError(true);\n      //   },\n      await uploadBytesResumable(storageRef, file).then(() => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateProfile(res.user, {\n            displayName,\n            photoURL: downloadURL\n          });\n          await setDoc(doc(db, \"users\", res.user.uid), {\n            uid: res.user.uid,\n            displayName,\n            email,\n            photoURL: downloadURL\n          });\n          console.log(\"File available at\", downloadURL);\n        });\n      });\n    } catch (error) {\n      setError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"Chatting App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"display name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter the new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"none\"\n          },\n          type: \"file\",\n          id: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: addAvatar,\n            alt: \"folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add an avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Already have an Account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationPage, \"AvrsuJm02Cqlq6/LWpvA21zDecQ=\");\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","addAvatar","createUserWithEmailAndPassword","updateProfile","auth","storage","db","ref","uploadBytesResumable","getDownloadURL","doc","setDoc","jsxDEV","_jsxDEV","RegistrationPage","_s","error","setError","handleFormSubmit","e","preventDefault","displayName","target","value","email","password","file","files","res","storageRef","uploadTask","then","snapshot","downloadURL","user","photoURL","uid","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","style","display","id","htmlFor","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/WEB DEV/Reactjs/chatting_app/src/pages/RegistrationPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n// import {faFolderPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport addAvatar from \"../images/addAvatar.png\";\r\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport { auth, storage, db } from \"../Firebase\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { doc, setDoc } from \"firebase/firestore\"; \r\n\r\nconst RegistrationPage = () => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //console.log(e.target[0].value); //to get only first input ele and there are total 5 child ele\r\n    const displayName = e.target[0].value;\r\n    const email = e.target[1].value;\r\n    const password = e.target[2].value;\r\n    const file = e.target[3].files[0]; // will take first file\r\n\r\n    try {\r\n      // const auth = getAuth();\r\n      const res = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n      const storageRef = ref(storage, displayName);\r\n\r\n      const uploadTask = uploadBytesResumable(storageRef, file);//\r\n\r\n      // Register three observers:\r\n      // 1. 'state_changed' observer, called any time the state changes\r\n      // 2. Error observer, called on failure\r\n      // 3. Completion observer, called on successful completion\r\n\r\n      // uploadTask.on(\r\n        \r\n      //   (error) => {\r\n      //      setError(true);\r\n      //   },\r\n        await  uploadBytesResumable(storageRef, file).then( \r\n        () => {\r\n          // Handle successful uploads on complete\r\n          // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n          getDownloadURL(uploadTask.snapshot.ref).then( async(downloadURL) => {\r\n            await updateProfile(res.user,{\r\n              displayName,\r\n              photoURL:downloadURL,\r\n            })\r\n            await setDoc(doc(db, \"users\", res.user.uid),{\r\n              uid: res.user.uid,\r\n              displayName,\r\n              email,\r\n              photoURL: downloadURL\r\n            });\r\n            console.log(\"File available at\", downloadURL);\r\n          });\r\n        }\r\n      );\r\n\r\n      \r\n\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"outer-div\">\r\n      <div className=\"main-div\">\r\n        <span className=\"logo\">Chatting App</span>\r\n        <span className=\"title\">Register</span>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <input type=\"text\" placeholder=\"display name\"></input>\r\n          <input type=\"email\" placeholder=\"email\"></input>\r\n          <input type=\"password\" placeholder=\"Enter the new password\"></input>\r\n          <input style={{ display: \"none\" }} type=\"file\" id=\"file\"></input>\r\n          <label htmlFor=\"file\">\r\n            <img src={addAvatar} alt=\"folder\" />\r\n            <span>Add an avatar</span>\r\n          </label>\r\n          <button>Sign Up</button>\r\n          {error && <span>Something went wrong</span>}\r\n        </form>\r\n        <p>Already have an Account? Login</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}