{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\WEB DEV\\\\Reactjs\\\\chatting_app\\\\src\\\\Components\\\\Chats.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthenticationContext\";\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  const [chats, setChats] = useState([]); //it holds user chats from api\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, \"userChats\", currentUser.uid), doc => {\n        setChats(doc.data());\n      });\n      //taken from firebase- \"Get realtime updates with Cloud Firestore\"\n      return () => {\n        unsub(); // this for clean up\n      };\n    };\n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n  // it shld load in real time. so when there is changes in \"userchats db\" it will reflected here by using\n  // \"get real time data from firebase\"\n\n  // console.log(chats);  since we get this in object, we need it in array.\n  //so\n  console.log(Object.entries(chats)); //converting it into array from objects.\n  //so this an array, we get id at 0th index {chat[0]}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: Object.entries(chats).map(chat => {\n      var _chat$1$userInfo$last;\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat[1].userInfo.photoURL,\n          alt: \"chat-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userChat-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: chat[1].userInfo.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat-info\",\n            children: (_chat$1$userInfo$last = chat[1].userInfo.lastMessage) === null || _chat$1$userInfo$last === void 0 ? void 0 : _chat$1$userInfo$last.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, chat[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"eXxQig5BaCIGxU142nLW6IWOEjo=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","doc","onSnapshot","db","jsxDEV","_jsxDEV","Chats","_s","chats","setChats","currentUser","getChats","unsub","uid","data","console","log","Object","entries","className","children","map","chat","_chat$1$userInfo$last","src","userInfo","photoURL","alt","fileName","_jsxFileName","lineNumber","columnNumber","displayName","lastMessage","text","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/WEB DEV/Reactjs/chatting_app/src/Components/Chats.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthenticationContext\";\r\nimport { doc, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from \"../Firebase\";\r\n\r\nconst Chats = () => {\r\n  const [chats, setChats] = useState([]); //it holds user chats from api\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const getChats = () => {\r\n      const unsub = onSnapshot(doc(db, \"userChats\", currentUser.uid), (doc) => {\r\n        setChats(doc.data());\r\n      });\r\n      //taken from firebase- \"Get realtime updates with Cloud Firestore\"\r\n      return () => {\r\n        unsub(); // this for clean up\r\n      };\r\n    };\r\n    currentUser.uid && getChats();\r\n  }, [currentUser.uid]);\r\n  // it shld load in real time. so when there is changes in \"userchats db\" it will reflected here by using\r\n  // \"get real time data from firebase\"\r\n\r\n // console.log(chats);  since we get this in object, we need it in array.\r\n  //so\r\n  console.log(Object.entries(chats)); //converting it into array from objects.\r\n//so this an array, we get id at 0th index {chat[0]}\r\n  return (\r\n    <div className=\"chats\">\r\n      {Object.entries(chats).map((chat) => {\r\n          <div className=\"user-chat\" key={chat[0]}> \r\n          <img\r\n            src={chat[1].userInfo.photoURL}\r\n            alt=\"chat-image\"\r\n          />\r\n          <div className=\"userChat-info\">\r\n            <span className=\"name\">{chat[1].userInfo.displayName}</span>\r\n            <span className=\"chat-info\">{chat[1].userInfo.lastMessage?.text}</span>\r\n          </div>\r\n        </div>\r\n      })\r\n      }\r\n\r\n      {/* ---------------------------------------------------------------------------------------- */}\r\n\r\n      {/* ----------------------------------------------------------------------------------------- */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACpD,SAASC,EAAE,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM;IAAEW;EAAY,CAAC,GAAGb,UAAU,CAACG,WAAW,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAMC,KAAK,GAAGV,UAAU,CAACD,GAAG,CAACE,EAAE,EAAE,WAAW,EAAEO,WAAW,CAACG,GAAG,CAAC,EAAGZ,GAAG,IAAK;QACvEQ,QAAQ,CAACR,GAAG,CAACa,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC;MACF;MACA,OAAO,MAAM;QACXF,KAAK,CAAC,CAAC,CAAC,CAAC;MACX,CAAC;IACH,CAAC;IACDF,WAAW,CAACG,GAAG,IAAIF,QAAQ,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACD,WAAW,CAACG,GAAG,CAAC,CAAC;EACrB;EACA;;EAED;EACC;EACAE,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,OAAO,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC;EACE,oBACEH,OAAA;IAAKc,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBH,MAAM,CAACC,OAAO,CAACV,KAAK,CAAC,CAACa,GAAG,CAAEC,IAAI,IAAK;MAAA,IAAAC,qBAAA;MACjC,aAAAlB,OAAA;QAAKc,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC1Bf,OAAA;UACEmB,GAAG,EAAEF,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACC,QAAS;UAC/BC,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACF1B,OAAA;UAAKc,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5Bf,OAAA;YAAMc,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAEE,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACO;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5D1B,OAAA;YAAMc,SAAS,EAAC,WAAW;YAAAC,QAAA,GAAAG,qBAAA,GAAED,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAACQ,WAAW,cAAAV,qBAAA,uBAA5BA,qBAAA,CAA8BW;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA,GAR0BT,IAAI,CAAC,CAAC,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASpC,CAAC;IACR,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7CID,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}